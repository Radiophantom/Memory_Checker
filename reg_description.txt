Ограничения:
На время выполнения теста КАТЕГОРИЧЕСКИ нельзя менять содержимое регистров.
1. Ширина шины берста - мимимум 1, максимум 6. Для адресации по байтам - ширина шины берста д.б. равна ширине шины адреса - log2(число байт в слове). (burstcount_w = address_w - log2(symbols per word).
2. Количество выполнения текущей задачи - минимум 1, максимум 128.
3. Количество выполнений сценария - минимум 1, максимум 1024.
4. Количество задач в сценарии - минимум 1, максимум 4.
5. Проверка памяти может осуществляться только в режиме 2 (Запись+Чтение).
6. Задержка памяти при чтении валидна только в режиме 1 (Чтение).
7. Задержка памяти при чтении актуальна только для последнего запроса.

Измерение пропускной способности доступно при любых режимах транзакций.
Регистр "Адрес ячейки памяти" имеет смысл устанавливать только в режимах "фиксирования" или "инкрементирования" адреса.
В режиме "инкрементирования" адреса, начальным будет являться тот, который был записан в регистре "Адрес ячейки памяти". 
В режиме Бегущий "0", адрес, состоящий из всех 1, кроме старшего разряда, будет сдвигаться по кругу поразрядно в сторону младшего, пока не пройдет все позиции бит в адресной шине.
В режиме Бегущая "1", адрес, состоящий из всех 0, кроме старшего разряда, будет сдвигаться по кругу поразрядно в сторону младшего, пока не пройдет все позиции бит в адресной шине.

Если число сценариев больше 1, то выполнение теста будет отложено до получения оставшихся сценариев.
Бегущий "0" и "1" в регистре данных - надо правильно выбирать длину берста, чтобы проверить все биты шины данных, т.е. длина берста > ширины шины данных.

Адресация внутри тестового модуля в словах, т.е. при обращении к нему чтение осуществляется по словам регистра.

После запуска теста в режиме автоматического режима осуществляется чтение регистра "результата теста", который надо отслеживать и по готовности забирать данные!

Регистры 32 битные, чего хватит для адресации памяти 4 ГБайта побайтно.

Режимы бегущей 1 или 0 могут работать только при побайтовой адресации!!! Иначе не получается организовать последовательный доступ к адресам 1 и 2, они могут попасть в 1 страницу в худшем случае и тогда оба запроса сольются в два одинаковых.
